<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>myvideo</artifactId>
        <groupId>com.myvideo</groupId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>war</packaging>
    <artifactId>myvideo-web</artifactId>


    <dependencies>
        <dependency>
            <groupId>com.myvideo</groupId>
            <artifactId>myvideo-service</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>




    </dependencies>


    <build>
        <finalName>myblog-web</finalName>

        <resources>
            <!-- 将资源拷贝到哪儿,就是编译之后拷贝到编译的目录下，默认就是target -->
           <!-- <resource>
                <directory>src/main/resources</directory>
                <targetPath>${project.build.directory}</targetPath>
            </resource>-->
            <!-- 开启资源过滤 -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <!-- 用于资源过滤(替换掉临时变量)，或者资源复制,指定编码为utf-8，否则会乱码 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <!-- tomcat，不用描述了 -->
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <server>tomcat7.00</server>
                    <port>8095</port>
                    <url>http://localhost:8095/</url><!--端口号-->
                    <path>/</path>
                    <uriEncoding>utf-8</uriEncoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.10</version>
                <configuration>
                    <parallel>methods</parallel>
                    <threadCount>10</threadCount>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles> <!-- 开始 -->
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <!-- 告诉下面的 war 插件从哪里取配置文件复制到输出目录,我们其实在这个目录下放的是log4j.xml配置文件，因为不同环境log4j配置不同,自然复制的log4j也不同 -->
            <properties>
                <configPath>src/main/resources/config/dev</configPath>
            </properties>
            <build>
                <!-- 告诉资源过滤该从哪个文件读取key-value值去进行资源替换(${}) -->
                <filters>
                    <filter>src/main/resources/profile/dev.properties</filter>
                </filters>
            </build>
        </profile>

        <profile>
            <id>test</id>
            <!-- 告诉下面的 war 插件从哪里取配置文件复制到输出目录 -->
            <properties>
                <configPath>src/main/resources/config/test</configPath>
            </properties>
            <build>
                <!-- 告诉资源过滤该从哪个文件读取key-value值去进行资源替换(${}) -->
                <filters>
                    <filter>src/main/resources/profile/test.properties</filter>
                </filters>
            </build>
        </profile>

        <profile>
            <id>production</id>
            <properties>
                <configPath>src/main/resources/config/production</configPath>
            </properties>
            <build>
                <filters>
                    <filter>src/main/resources/profile/production.properties</filter>
                </filters>
            </build>
        </profile>

    </profiles><!-- 结束 -->

</project>